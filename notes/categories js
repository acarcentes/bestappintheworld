
var lat = localStorage.getItem("lat", lat);
var lng = localStorage.getItem("lng", lng);

function getCityCor() {
  console.log(lat);
  console.log(lng)
}

getCityCor();


var geoCodingUrl = "https://maps.googleapis.com/maps/api/geocode/json?address="+city+"&key="+googleApiKey

$.ajax({
  url: geoCodingUrl,
  method: "GET",
}).then(function (response) {
  console.log(response);
  console.log(response.results[0].geometry.location);
  // console.log(response.results[0].geometry.location.lat);
  var lat = response.results[0].geometry.location.lat;
  console.log(lat);
  // console.log(response.results[0].geometry.location.lng);
  var lng = response.results[0].geometry.location.lng;
  console.log(lng);



// longitude & lattitude locations
var latitude = "12.91285";
var longitude = "100.87808";

// Converts the city location into longitude and lattitude positions
function getLatLngLocations(city) {}

// Gets the list of restaurants upto 30 based on location
function getRestaurants() {
  var settings = {
    url:
      "https://tripadvisor1.p.rapidapi.com/restaurants/list-by-latlng?limit=30&currency=USD&distance=2&lunit=km&lang=en_US&latitude=" +
      latitude +
      "&longitude=" +
      longitude,
    method: "GET",
    headers: {
      "x-rapidapi-key": "569c506913msh97bb985d6e98504p1b3ad2jsnb268e32c19d8",
    },
  };

  // Ajax call back function on query response
  $.ajax(settings).done(function (response) {
    for (var i = 0; i < response.data.length; i++) {
      if (response.data[i] != undefined && response.data[i].name != undefined) {
        console.log(response.data[i].name);
      }
    }
  });
}

getLatLngLocations(city);
getRestaurants();

trip advisor api
// var rapidApiKey = "9068da564emsh698c065ea958fa5p1c6c9djsn29907d4815c5"

// var tripAdvisorUrl = "https://tripadvisor1.p.rapidapi.com/restaurants/get-details?location_id=2233968&lang=en_US&currency=USD&key="+rapidApiKey

// $.ajax({
//   url: tripAdvisorUrl,
//   method: "GET",
// }).then(function(response){
//   console.log(response)

// })



MAYA'S CODE
// 1. have to get the city input from index.html
//////////////////
// GRABBING THE CITY INPUT FROM INDEX.HTML FILE
//////////////////
// var city = localStorage.getItem("city");

var lat = localStorage.getItem("lat", lat);
var lng = localStorage.getItem("lng", lng);

function getCityCor() {
  console.log(lat);
  console.log(lng)
}

getCityCor();

//////////////////
// Google Places API
//////////////////////

var googleApiKey = "AIzaSyAhBVrpWoA9FUHSfRrpiB_4OOw2Crmlw-8";

function googlePlaces(foodType) {
  var googlePlacesUrl =
"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location="+lat+","+lng+"&radius=1500&type=restaurant&keyword=cruise&key="+
googleApiKey;

$.ajax({
url: googlePlacesUrl,
method: "GET",
}).then(function (response) {
  console.log(response);

  if (foodType == "breakfast") {
    console.log("yaasss");

    var breakfastArray = [
      "restaurant", "nightclub"
    ]
  }

  if (foodType == "lunch") {
    console.log("yaass")
  }

  if (foodType == "dinner") {
    console.log("yaass")
  }

  if (foodType == "dessert") {
    console.log("yaass")
  }
});
}

// if types(from data array) is equal to the breakfast array elements make a for loop if type = breakfastArray[i] then display 

$(".container").on("click", function(){
  var id = this.id.toString();
  googlePlaces(id);

  console.log(id);
});

// 3. have to filter that array of places into our four different categories- breakfast, lunch, dinner, and dessert
// filter if the business is operational
  // if type of restaurant is a bar or food place it under dinner
  // if type of restaurant is food place under lunch


// 4. when you click one of the filtered selections it takes you to that pages html
// 5. make a search bar so the user can update their city input if they want
//////////////////
// UPDATED CITY SEARCH VALUE
//////////////////
$("#search").click(function(){
  var city = $("#city").val().trim();
  localStorage.setItem("city", city)

  location.replace("categories.html");

});


MONIKA's CODE
// Restaurant object with properties
var restaurantObj = [
  {
    name: "",
    address: "",
    rating: "",
    locationImage: "",
    priceLevel: "",
    openNow: "",
  },
];

// Different types of restaurant arrays
var breakFastRestaurants = new Array();
var lunchRestaurants = new Array();
var dinnerRestaurants = new Array();
var dessertRestaurants = new Array();

// convert the city input into latitude and longitude coordinates for google places api
//////////////////
// Google Places API
//////////////////////

var googleApiKey = "AIzaSyAhBVrpWoA9FUHSfRrpiB_4OOw2Crmlw-8";

function googlePlaces(foodType) {
  
  var googlePlacesUrl =
  "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location="+lat+","+lng+"&radius=1500&type=restaurant&keyword=cruise&key="+
  googleApiKey;

$.ajax({
url: googlePlacesUrl,
method: "GET",
}).then(function (response) {
  //Clear the restaurants object arrays
  breakFastRestaurants.length = 0;
  lunchRestaurants.length = 0;
  dinnerRestaurants.length = 0;
  dessertRestaurants.length = 0;

  console.log(response);

  if (foodType == "breakfast") {
    console.log("yaasss");

    var breakfastArray = [
      "restaurant", "nightclub"
    ]
  }

  if (foodType == "lunch") {
    console.log("yaass")
  }

  if (foodType == "dinner") {
    console.log("yaass")
  }

  if (foodType == "dessert") {
    console.log("yaass")
  }
});
}

// if types(from data array) is equal to the breakfast array elements make a for loop if type = breakfastArray[i] then display 

$(".container").on("click", function(){
  var id = this.id.toString();
  googlePlaces(id);

  console.log(id);


  // Google Places API
  var googlePlacesUrl =
    "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=" +
    lat +
    "," +
    lng +
    "&radius=1500&type=restaurant&keyword=cruise&key=" +
    googleApiKey;

  $.ajax({
    url: googlePlacesUrl,
    method: "GET",
  }).then(function (response) {
    console.log(response);

    for (var i = 0; i < response.results.length; i++) {
      var restaurant = Object.create(restaurantObj);

      if (response.results[i].name != undefined) {
        var name = response.results[i].name;
        restaurant.name = name;
        console.log(restaurant.name);
      } else {
        restaurant.name = " ";
      }

      if (response.results[i].vicinity != undefined) {
        var address = response.results[i].vicinity;
        restaurant.address = address;
        console.log(restaurant.address);
      } else {
        restaurant.address = " ";
      }

      if (response.results[i].rating != undefined) {
        var rating = response.results[i].rating;
        restaurant.rating = rating;
        console.log(restaurant.rating);
      } else {
        restaurant.rating = " ";
      }

      if (response.results[i].price_level != undefined) {
        var priceLevel = response.results[i].price_level;
        restaurant.priceLevel = priceLevel;
        console.log(restaurant.priceLevel);
      } else {
        restaurant.priceLevel = " ";
      }

      if (response.results[i].opening_hours != undefined) {
        var openNow = response.results[i].opening_hours.open_now;
        restaurant.openNow = openNow;
        console.log(restaurant.openNow);
      } else {
        restaurant.openNow = "false";
      }

      if (
        response.results[i].photos.length > 0 &&
        response.results[i].photos[0].html_attributions.length > 0
      ) {
        var locImage = response.results[i].photos[0].html_attributions[0];
        restaurant.locationImage = locImage;
        console.log(restaurant.locationImage);
      } else {
        restaurant.locationImage = " ";
      }

      for (var j = 0; j < response.results[i].types.length; j++) {
        if (response.results[i].types[j] == "bar") {
          dinnerRestaurants.push(restaurant);
          dessertRestaurants.push(restaurant);
          break;
        } else if (
          response.results[i].types[j] == "restaurant" ||
          response.results[i].types[j] == "food"
        ) {
          breakFastRestaurants.push(restaurant);
          lunchRestaurants.push(restaurant);
          break;
        }
      }
    }
  });

  $("#breakfast").on("click", function () {
    console.log("hello");
    if (breakFastRestaurants.length == 0) {
      alert(
        "There are no breakfast restaurants in the search location at " + city
      );
      return;
    }

    for (var i = 0; i < breakFastRestaurants.length; i++) {
      console.log(breakFastRestaurants[i]);
      // Create HTML components from the breatfast restaurants object array

      // breakFastRestaurants.name
      // breakFastRestaurants.address
      // breakFastRestaurants.rating
      // breatFastRestaurants.priceLevel
      // breatFastRestaurants.openNow
      // breakFastRestaurants.locationImage

    }
  });

  $("#lunch").on("click", function () {
    if (lunchRestaurants.length == 0) {
      alert("There are no lunch restaurants in the search location at " + city);
      return;
    }

    for (var i = 0; i < lunchRestaurants.length; i++) {
      console.log(lunchRestaurants[i]);
      // Create HTML components from the breatfast restaurants object array

    }
  });

  $("#dinner").on("click", function () {
    if (dinnerRestaurants.length == 0) {
      alert(
        "There are no dinner restaurants in the search location at " + city
      );
      return;
    }

    for (var i = 0; i < dinnerRestaurants.length; i++) {
      console.log(dinnerRestaurants[i]);
      // Create HTML components from the breatfast restaurants object array

    }
  });

  $("#dessert").on("click", function () {
    if (dessertRestaurants.length == 0) {
      alert(
        "There are no dessert restaurants in the search location at " + city
      );
      return;
    }

    for (var i = 0; i < dessertRestaurants.length; i++) {
      console.log(dessertRestaurants[i]);
      // Create HTML components from the breakfast restaurants object array

    }
  });